var documenterSearchIndex = {"docs":
[{"location":"Reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"Reference/","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"ParametricMortalityModels/#Parametric-Mortality-Models","page":"Parametric Models","title":"Parametric Mortality Models","text":"","category":"section"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"CurrentModule = MortalityTables","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Pages = [\"ParametricMortalityModels.md\"]\nDepth = 5","category":"page"},{"location":"ParametricMortalityModels/#Introduction","page":"Parametric Models","title":"Introduction","text":"","category":"section"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Parametric mortality models are not collections of annual rates, but rather construct a mathematical representation of a mortality curve.","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"They are often used underlying traditional table construction, but are converted to a list of annual rates for convenience in practice. MortalityTables.jl provides them and are essentially interchangeable versus the traditional table structure in most use cases.","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Many of these models were adapted from the MortalityLaws R package, by Marius Pascariu & Vladimir Canudas-Romo.","category":"page"},{"location":"ParametricMortalityModels/#Usage-Example","page":"Parametric Models","title":"Usage Example","text":"","category":"section"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Use like so:","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"a = 0.0002\nb = 0.13\nc = 0.001\nm = MortalityTables.Makeham(a=a,b=b,c=c)\ng = MortalityTables.Gompertz(a=a,b=b)","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Now some examples with m, but could use g interchangeably:","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"age = 20\nm[20]                 # the mortality rate at age 20\ndecrement(m,20,25)    # the five year cumulative mortality rate\nsurvival(m,20,25) # the five year survival rate","category":"page"},{"location":"ParametricMortalityModels/#Other-notes","page":"Parametric Models","title":"Other notes","text":"","category":"section"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Because of the large number of models and the likelihood for overlap with other things (e.g. Quadratic or Weibull would be expected to be found in other contexts as well), these models Are not exported from the package, so you need to call them by prefixing with MortalityTables. \ne.g. : MortalityTables.Kostaki()\nBecause of the large number of parameters for the models, the arguments are keyword rather than positional: MortalityTables.Gompertz(a=0.01,b=0.2)\nThe models have default values, so they can be called without args like this: MortalityTables.Gompertz().\nSee the help text for what the default values are: ?Gompertz","category":"page"},{"location":"ParametricMortalityModels/#Functions","page":"Parametric Models","title":"Functions","text":"","category":"section"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Many of the models only have analytical forms for either the hazard or survival curve. You can still call either on any of the models, as MortalityTables with numerically integrate or automatic differentiate as appropriate.","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"decrement\nMortalityTables.hazard\nMortalityTables.cumhazard\nMortalityTables.survival\nMortalityTables.μ","category":"page"},{"location":"ParametricMortalityModels/#MortalityTables.decrement","page":"Parametric Models","title":"MortalityTables.decrement","text":"decrement(mortality_vector,to_age)\ndecrement(mortality_vector,from_age,to_age)\n\nReturns the cumulative decrement through attained age to_age. The start of the calculation is either the start of the vector, or attainedage `fromage.fromageandtoage` need to be Integers. Add a DeathDistribution as the last argument to handle floating point and non-whole ages:\n\ndecrement(mortality_vector,to_age,::DeathDistribution)\ndecrement(mortality_vector,from_age,to_age,::DeathDistribution)\n\nExamples\n\njulia> qs = UltimateMortality([0.1,0.3,0.6,1]);\n    \njulia> decrement(qs,0)\n0.0\njulia> decrement(qs,1)\n0.1\n\njulia> decrement(qs,1,1)\n0.0\njulia> decrement(qs,1,2)\n0.3\n\njulia> decrement(qs,0.5,Uniform())\n0.05\n\n\n\n\n\n","category":"function"},{"location":"ParametricMortalityModels/#MortalityTables.hazard","page":"Parametric Models","title":"MortalityTables.hazard","text":"hazard(model,age)\n\nThe force of mortality at age. More precisely: the ratio of the probability of failure/death to the survival function.\n\n\n\n\n\n","category":"function"},{"location":"ParametricMortalityModels/#MortalityTables.cumhazard","page":"Parametric Models","title":"MortalityTables.cumhazard","text":"cumhazard(model,age)\n\nThe cumulative force of mortality at age. More precisely: the ratio of the cumulative probability of failure/death to the survival function.\n\n\n\n\n\n","category":"function"},{"location":"ParametricMortalityModels/#MortalityTables.survival","page":"Parametric Models","title":"MortalityTables.survival","text":"survival(mortality_vector,to_age)\nsurvival(mortality_vector,from_age,to_age)\n\nReturns the survival through attained age to_age. The start of the calculation is either the start of the vector, or attainedage `fromage.fromageandtoage` need to be Integers. Add a DeathDistribution as the last argument to handle floating point and non-whole ages:\n\nsurvival(mortality_vector,to_age,::DeathDistribution)\nsurvival(mortality_vector,from_age,to_age,::DeathDistribution)\n\nIf given a negative to_age, it will return 1.0. Aside from simplifying the code, this makes sense as for something to exist in order to decrement in the first place, it must have existed and surived to the point of  being able to be decremented.\n\nExamples\n\njulia> qs = UltimateMortality([0.1,0.3,0.6,1]);\n    \njulia> survival(qs,0)\n1.0\njulia> survival(qs,1)\n0.9\n\njulia> survival(qs,1,1)\n1.0\njulia> survival(qs,1,2)\n0.7\n\njulia> survival(qs,0.5,Uniform())\n0.95\n\n\n\n\n\n","category":"function"},{"location":"ParametricMortalityModels/#MortalityTables.μ","page":"Parametric Models","title":"MortalityTables.μ","text":"μ(;m::ParametricMortality,age)\n\nmu_x: Return the force of mortality at the given age. \n\n\n\n\n\n","category":"function"},{"location":"ParametricMortalityModels/#Available-Models","page":"Parametric Models","title":"Available Models","text":"","category":"section"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"These models are subtypes of ParametricMortality:","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"Pages   = [\"ParametricMortalityModels.md\"]\nModules = [MortalityTables]\nOrder   = [:type]","category":"page"},{"location":"ParametricMortalityModels/","page":"Parametric Models","title":"Parametric Models","text":"MortalityTables.Makeham\nMortalityTables.Gompertz\nMortalityTables.InverseGompertz\nMortalityTables.Opperman\nMortalityTables.Thiele\nMortalityTables.Wittstein\nMortalityTables.Weibull\nMortalityTables.InverseWeibull\nMortalityTables.Perks\nMortalityTables.VanderMaen\nMortalityTables.VanderMaen2\nMortalityTables.StrehlerMildvan\nMortalityTables.Beard\nMortalityTables.MakehamBeard\nMortalityTables.Quadratic\nMortalityTables.GammaGompertz\nMortalityTables.Siler\nMortalityTables.HeligmanPollard\nMortalityTables.HeligmanPollard2\nMortalityTables.HeligmanPollard3\nMortalityTables.HeligmanPollard4\nMortalityTables.RogersPlanck\nMortalityTables.Martinelle\nMortalityTables.Kostaki\nMortalityTables.Kannisto\nMortalityTables.KannistoMakeham","category":"page"},{"location":"ParametricMortalityModels/#MortalityTables.Makeham","page":"Parametric Models","title":"MortalityTables.Makeham","text":"Makeham(;a,b,c)\n\nConstruct a mortality model following Makeham's law.\n\nmathrmhazard left( rm age right) =  ae^bx + c\n\nDefault args:\n\na = 0.0002\nb = 0.13\nc = 0.001\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Gompertz","page":"Parametric Models","title":"MortalityTables.Gompertz","text":"Gompertz(;a,b)\n\nConstruct a mortality model following Gompertz' law of mortality.\n\nmathrmhazard left( rm age right) =  ae^bx\n\nThis is a special case of Makeham's law and will Makeham model where c=0.\n\nDefault args:\n\na = 0.0002\nb = 0.13\n\n\n\n\n\n","category":"function"},{"location":"ParametricMortalityModels/#MortalityTables.InverseGompertz","page":"Parametric Models","title":"MortalityTables.InverseGompertz","text":"InverseGompertz(;a,b,c)\n\nConstruct a mortality model following InverseGompertz's law.\n\nbeginaligned\nmathrmhazard left( rm age right) = frac1sigmae^fracage-msigmae^e^frac-(age-m)sigma-1\n\nmathrmsurvival left( rm age right) = frac1 - e^ - e^frac - left( rm age - m right)sigma1 - e^ - e^fracmsigma\nendaligned\n\nDefault args:\n\nm = 49\nσ = 7.7\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Opperman","page":"Parametric Models","title":"MortalityTables.Opperman","text":"Opperman(;a,b,c)\n\nConstruct a mortality model following Opperman's law of mortality.\n\nmathrmhazard left( rm age right) = fracasqrtage + b +csqrt3age\n\nDefault args:\n\na = 0.04\nb = 0.0004\nc = 0.001\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Thiele","page":"Parametric Models","title":"MortalityTables.Thiele","text":"Thiele(;a,b,c,d,e,f,g)\n\nConstruct a mortality model following Opperman's law of mortality.\n\nbeginaligned\nmu_1 = a cdot e^left(  - b right) cdot rm age\n\nmu_2 = c cdot e^-05 cdot d cdot left( rm age - e right)^2\n\nmu_3 = f cdot e^g cdot rm age\n\nmathrmhazard left( rm age right) = begincases\nmu_1 + mu_3  textif  left( rm age = 0 right)\nmu_1 + mu_2 + mu_3  textotherwise\nendcases\nendaligned\n\nDefault args:\n\na = 0.02474 \nb = 0.3\nc = 0.004\nd = 0.5\ne = 25\nf = 0.0001\ng = 0.13\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Wittstein","page":"Parametric Models","title":"MortalityTables.Wittstein","text":"Wittstein(;a,b,m,n)\n\nConstruct a mortality model following Wittstein's law of mortality.\n\nmathrmhazard left( rm age right) = frac1b cdot a^ - left( b cdot rm age right)^n + a^ - left( m - rm age right)^n\n\nDefault args:\n\na = 1.5\nb = 1.\nn = 0.5\nm = 100\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Weibull","page":"Parametric Models","title":"MortalityTables.Weibull","text":"Weibull(;m,σ)\n\nConstruct a mortality model following Weibull's law of mortality.\n\nNote that if σ > m, then the mode of the density is 0 and hx is a non-increasing function of x, while if σ < m, then the mode is greater than 0 and hx is an increasing function. \n\nm >0 is a measure of location\nσ >0 is measure of dispersion\n\nbeginaligned\nmathrmhazard left( rm age right) = frac1sigma cdot left( fracrm agem right)^fracmsigma - 1\n\nmathrmcumhazard left( rm age right) = left( fracrm agem right)^fracmsigma\n\nmathrmsurvival left( rm age right) =  e^ - mathrmcumhazard left( m rm age right)\nendaligned\n\nDefault args:\n\nm = 1\nσ = 2\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.InverseWeibull","page":"Parametric Models","title":"MortalityTables.InverseWeibull","text":"InverseWeibull(;m,σ)\n\nConstruct a mortality model following Weibull's law of mortality.\n\nThe Inverse-Weibull proves useful for modelling the childhood and teenage years, because the logarithm of h(x) is a concave function.\n\nm >0 is a measure of location\nσ >0 is measure of dispersion\n\nbeginaligned\nmathrmhazard left( rm age right) = fracfrac1sigma cdot left( fracrm agem right)^frac - msigma - 1e^left( fracrm agem right)^frac - msigma - 1\n\nmathrmcumhazardleft( rm age right) =  - logleft( 1 - e^ - left( fracrm agem right)^frac - msigma right)\n\nmathrmsurvivalleft( rm age right) =  e^ - mathrmcumhazardleft( m rm age right)\nendaligned\n\nDefault args:\n\nm = 5\nσ = 10\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Perks","page":"Parametric Models","title":"MortalityTables.Perks","text":"Perks(;a,b,c,d)\n\nConstruct a mortality model following Perks' law of mortality.\n\nmathrmhazard left( rm age right) = fraca + b cdot c^rm ageb cdot c^ - rm age + 1 + d cdot c^rm age\n\nDefault args:\n\na = 0.002\nb = 0.13\nc = 0.01\nd = 0.01\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.VanderMaen","page":"Parametric Models","title":"MortalityTables.VanderMaen","text":"VanderMaen(;a,b,c,i,n)\n\nConstruct a mortality model following VanderMaen's law of mortality.\n\nmathrmhazard left( rm age right) = a + b cdot rm age + c cdot rm age^2 + fracin - rm age\n\nDefault args:\n\na = 0.01\nb = 1\nc = 0.01\ni = 100\nn = 200\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.VanderMaen2","page":"Parametric Models","title":"MortalityTables.VanderMaen2","text":"VanderMaen2(;a,b,i,n)\n\nConstruct a mortality model following VanderMaen2's law of mortality.\n\nmathrmhazard left( rm age right) = a + b cdot rm age + fracin - rm age\n\nDefault args:\n\na = 0.01\nb = 1\ni = 100\nn = 200\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.StrehlerMildvan","page":"Parametric Models","title":"MortalityTables.StrehlerMildvan","text":"StrehlerMildvan(;k,v₀,b,d)\n\nConstruct a mortality model following StrehlerMildvan's law of mortality.\n\nmathrmhazard left( rm age right) = k cdot e^fracleft(  - v_0 right) cdot left( 1 - b cdot rm age right)d\n\nDefault args:\n\nk   = 0.01\nv₀  = 2.5\nb   = 0.2\nd   = 6.0\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Beard","page":"Parametric Models","title":"MortalityTables.Beard","text":"Beard(;a,b,k)\n\nConstruct a mortality model following Beard's law of mortality.\n\nmathrmhazard left( rm age right) = fraca cdot e^b cdot rm age1 + k cdot a cdot e^b cdot rm age\n\nDefault args:\n\na = 0.002\nb = 0.13\nk = 1.\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.MakehamBeard","page":"Parametric Models","title":"MortalityTables.MakehamBeard","text":"MakehamBeard(;a,b,c,k)\n\nConstruct a mortality model following MakehamBeard's law of mortality.\n\nmathrmhazard left( rm age right) =left( rm age right) = fraca cdot e^b cdot rm age1 + k cdot a cdot e^b cdot rm age + c\n\nDefault args:\n\na = 0.002\nb = 0.13\nc = 0.01\nk = 1.\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Quadratic","page":"Parametric Models","title":"MortalityTables.Quadratic","text":"Quadratic(;a,b,c)\n\nConstruct a mortality model following Quadratic law of mortality.\n\nmathrmhazard left( rm age right) = a + b cdot rm age + c cdot rm age^2\n\nDefault args:\n\na = 0.01\nb = 1.\nc = 0.01\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.GammaGompertz","page":"Parametric Models","title":"MortalityTables.GammaGompertz","text":"GammaGompertz(;a,b,γ)\n\nConstruct a mortality model following GammaGompertz law of mortality.\n\nmathrmhazard left( rm age right) = fraca cdot e^b cdot rm age1 + fraca cdot gammab cdot left( e^b cdot rm age - 1 right)\n\nDefault args:\n\na = 0.002\nb = 0.13\nγ = 1\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Siler","page":"Parametric Models","title":"MortalityTables.Siler","text":"Siler(;a,b,c,d,e)\n\nConstruct a mortality model following Siler law of mortality.\n\nmathrmhazard left( rm age right) = a cdot e^left(  - b right) cdot rm age + c + d cdot e^e cdot rm age\n\nDefault args:\n\na = 0.0002\nb = 0.13\nc = 0.001\nd = 0.001\ne = 0.013\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.HeligmanPollard","page":"Parametric Models","title":"MortalityTables.HeligmanPollard","text":"HeligmanPollard(;a,b,c,d,e,f,g,h)\n\nConstruct a mortality model following HeligmanPollard law of mortality with 8 parameters.\n\nmathrmhazard left( rm age right) = a cdot e^left(  - b right) cdot rm age + c + d cdot e^e cdot rm age\n\nDefault args:\n\na = 0.0002\nb = 0.13\nc = 0.001\nd = 0.001\ne = 0.013\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.HeligmanPollard2","page":"Parametric Models","title":"MortalityTables.HeligmanPollard2","text":"HeligmanPollard2(;a,b,c,d,e,f,g,h)\n\nConstruct a mortality model following HeligmanPollard (alternate) law of mortality with 8 parameters.\n\nbeginaligned\nmu_1 = a^left( rm age + b right)^c + fracg cdot h^rm age1 + g cdot h^rm age\n\nmu_2 = d cdot e^left(  - e right) cdot left( logleft( fracrm agef right) right)^2\n\nmathrmhazardleft( rm age right) = begincases\nmu_1  textif  left( rm age = 0 right)\nmu_1 + mu_2  textotherwise\nendcases\nendaligned\n\nDefault args:\n\na = .0005\nb = .004\nc = .08\nd = .001\ne = 10\nf = 17\ng = .00005\nh = 1.1\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.HeligmanPollard3","page":"Parametric Models","title":"MortalityTables.HeligmanPollard3","text":"HeligmanPollard3(;a,b,c,d,e,f,g,h,k)\n\nConstruct a mortality model following HeligmanPollard (alternate) law of mortality with 9 parameters.\n\nbeginaligned\nmu_1 = a^left( rm age + b right)^c + fracg cdot h^rm age1 + k cdot g cdot h^rm age\n\nmu_2 = d cdot e^left(  - e right) cdot left( logleft( fracrm agef right) right)^2\n\nmathrmhazardleft( rm age right) = begincases\nmu_1  textif  left( rm age = 0 right)\nmu_1 + mu_2  textotherwise\nendcases\nendaligned\n\nDefault args:\n\na = .0005\nb = .004\nc = .08\nd = .001\ne = 10\nf = 17\ng = .00005\nh = 1.1\nk= 1.\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.HeligmanPollard4","page":"Parametric Models","title":"MortalityTables.HeligmanPollard4","text":"HeligmanPollard4(;a,b,c,d,e,f,g,h,k)\n\nConstruct a mortality model following HeligmanPollard (alternate) law of mortality with 9 parameters.\n\nbeginaligned\nmu_1 = a^left( rm age + b right)^c + fracg cdot h^rm age^k1 + g cdot h^rm age^k\n\nmu_2 = d cdot e^left(  - e right) cdot left( logleft( fracrm agef right) right)^2\n\nmathrmhazardleft( rm age right) = begincases\nmu_1  textif  left( rm age = 0 right)\nmu_1 + mu_2  textotherwise\nendcases\nendaligned\n\nDefault args:\n\na = .0005\nb = .004\nc = .08\nd = .001\ne = 10\nf = 17\ng = .00005\nh = 1.1\nk= 1.\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.RogersPlanck","page":"Parametric Models","title":"MortalityTables.RogersPlanck","text":"RogersPlanck(;a₀, a₁, a₂, a₃, a, b, c, d, u)\n\nConstruct a mortality model following RogersPlanck law of mortality.\n\nmathrmhazardleft( rm age right) = a_0 + a_1 cdot e^left(  - a right) cdot rm age + a_2 cdot e^b cdot left( rm age - u right) - e^left(  - c right) cdot left( rm age - u right) + a_3 cdot e^d cdot rm age\n\nDefault args:\n\na₀ = 0.0001\na₁ = 0.02\na₂ = 0.001\na₃ = 0.0001\na  = 2.\nb  = 0.001\nc  = 100.\nd  = 0.1\nu  = 0.33\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Martinelle","page":"Parametric Models","title":"MortalityTables.Martinelle","text":"Martinelle(;a,b,c,d,k)\n\nConstruct a mortality model following Martinelle's law of mortality.\n\nmathrmhazardleft( rm age right) = fraca cdot e^b cdot rm age + c1 + d cdot e^b cdot rm age + k cdot e^b cdot rm age\n\nDefault args:\n\na = 0.001\nb = 0.13\nc = 0.001\nd = 0.1\nk = 0.001\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Kostaki","page":"Parametric Models","title":"MortalityTables.Kostaki","text":"Kostaki(;a,b,c,d,e1,e2,f,g,h)\n\nConstruct a mortality model following Kostaki's law of mortality. A nine-parameter adaptation of HeligmanPollard.\n\nbeginaligned\nmu_1 = a^left( rm age + b right)^c + g cdot h^rm age\n\nmu_2 = begincases\nd cdot e^ - left( e1 cdot logleft( fracrm agef right) right)^2  textif  left( rm age leq f right)\nd cdot e^ - left( e2 cdot logleft( fracrm agef right) right)^2  textotherwise\nendcases\n\neta = begincases\nmu_1  textif  left( rm age = 0 right)\nmu_1 + mu_2  textotherwise\nendcases\n\nmathrmhazardleft( rm age right) = fraceta1 + eta\n\nendaligned\n\nDefault args:\n\na = 0.0005\nb = 0.01\nc = 0.10\nd = 0.001\ne1 = 3.\ne2 = 0.1\nf = 25.\ng = .00005\nh = 1.1\n\nKostaki, A. (1992). A nine‐parameter version of the Heligman‐Pollard formula. Mathematical Population Studies, 3(4), 277–288. doi:10.1080/08898489209525346 \n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.Kannisto","page":"Parametric Models","title":"MortalityTables.Kannisto","text":"Kannisto(;a,b)\n\nConstruct a mortality model following Kannisto's law of mortality.\n\nbeginaligned\nmathrmhazardleft( rm age right) = fraca cdot e^b cdot rm age1 + a cdot e^b cdot rm age\n\nmathrmcumhazardleft( rm age right) = 1a * log((1 + b*exp(b*age))  (1 + a))\n\nmathrmsurvivalleft( rm age right) = e^ - mathrmcumhazardleft( m rm age right)\nendaligned\n\nDefault args:\n\na = 0.5\nb = 0.13\n\n\n\n\n\n","category":"type"},{"location":"ParametricMortalityModels/#MortalityTables.KannistoMakeham","page":"Parametric Models","title":"MortalityTables.KannistoMakeham","text":"KannistoMakeham(;a,b,c)\n\nConstruct a mortality model following KannistoMakeham's law of mortality.\n\nmathrmhazardleft( rm age right) = fraca cdot e^b cdot rm age1 + a cdot e^b cdot rm age + c\n\nDefault args:\n\na = 0.5\nb = 0.13\nc = 0.001\n\n\n\n\n\n","category":"type"},{"location":"Tables/#Tables","page":"Tables","title":"Tables","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"CurrentModule = MortalityTables","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Pages = [\"Tables.md\"]\nDepth = 5","category":"page"},{"location":"Tables/#Loading-Tables","page":"Tables","title":"Loading Tables","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"There are a variety of ways to load your own tables, reference online tables, or load bundled tables:","category":"page"},{"location":"Tables/#Bundled-[mort.SOA.org](https://mort.soa.org)-Tables","page":"Tables","title":"Bundled mort.SOA.org Tables","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Comes with some tables built in via mort.SOA.org and by using you agree to their terms.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"note: Note\nMany mortality tables from mort.SOA.org have been tested to work, however not all mortality tables have been tested. Additionally, mort.SOA.org provides non-mortality rate tables which may not be propoerly parsed by this package. Try it and look at a few of the resulting values. If you encounter any issues, please file an issue.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Sample of some of the included table sets:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"2017 Loaded CSO\n2015 VBT\n2001 VBT\n2001 CSO\n1980 CSO\n1980 CET","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Click here to see the full list of tables included.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"If you would like more tables added by default, please open a GitHub issue with the request.","category":"page"},{"location":"Tables/#Other-[mort.SOA.org](https://mort.soa.org)-Tables","page":"Tables","title":"Other mort.SOA.org Tables","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Given a table id (for example 60029) you can request the table directly from the SOA's mortality table service. Remember that not all tables have been tested, though the standard source format should mean compatibility with MortalityTables.jl.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"aus_life_table_female = get_SOA_table(60029)\naus_life_table_female[0]  # returns the attained age 0 rate of 0.10139","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"You can combine it with the bundled tables too:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"tables = MortalityTables.tables()\n\nget_SOA_table!(tables,60029) # this modifies `tables` by adding the new table\n\nt = tables[\"Australian Life Tables 1891-1900 Female\"]\nt[0]  # returns the attained age 0 rate of 0.10139","category":"page"},{"location":"Tables/#Load-custom-set-of-tables","page":"Tables","title":"Load custom set of tables","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Download the .xml aka the (XTbML format) version of the table from mort.SOA.org and place it in a directory of your choosing. Then call MortaliyTables.tables(path_to_your_dir).","category":"page"},{"location":"Tables/#From-CSV","page":"Tables","title":"From CSV","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"If you have a CSV file that is from mort.SOA.org, or follows the same structure, then you can load and parse the table into a MortalityTable like so:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"using CSV\nusing MortalityTables\n\npath = \"path/to/table.csv\"\nfile = CSV.File(path,header=false) # SOA's CSV files have no true header\ntable = MortalityTable(file)","category":"page"},{"location":"Tables/#From-XTbML","page":"Tables","title":"From XTbML","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"If you have a file using the XTbML format:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"using MortalityTables\npath = \"path/to/table.xml\"\ntable = MortalityTables.readXTbML(path)","category":"page"},{"location":"Tables/#Custom-Tables","page":"Tables","title":"Custom Tables","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Say you have an ultimate vector and select matrix, and you want to leverage the MortalityTables package.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Here's an example, where we first construct the UlitmateMortality and then combine it with the select rates to get a SelectMortality table.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"using MortalityTables\n\n# represents attained ages of 15 through 100\nult_vec = [0.005, 0.008, ...,0.805,1.00]\nult = UltimateMortality(ult_vec,start_age = 15)","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"We can now use this the ulitmate rates all by itself:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"q(ult,15,1) # 0.005","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"And join with the select rates, which for our example will start at age 0:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"# attained age going down the column, duration across\nselect_matrix = [ 0.001 0.002 ... 0.010;\n                  0.002 0.003 ... 0.012;\n                  ...\n                ]\nsel_start_age = 0\nsel = SelectMortality(select_matrix,ult,start_age = 0)\n\nsel[0][0] #issue age 0, attained age 0 rate of  0.001\nsel[0][100] #issue age 0, attained age 100 rate of  1.0","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Lastly, to take the SelectMortality and UltimateMortality we just created, we can combine them into one stored object, along with a TableMetaData:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"my_table = MortalityTable(\n              s1,\n              u1,\n              metadata=TableMetaData(name=\"My Table\", comments=\"Rates for Product XYZ\")\n              )","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"MortalityTables.readXTbML\nMortalityTables.get_SOA_table\nMortalityTables.tables\nMortalityTables.get_SOA_table!","category":"page"},{"location":"Tables/#MortalityTables.readXTbML","page":"Tables","title":"MortalityTables.readXTbML","text":"readXTbML(path)\n\nLoads the XtbML (the SOA XML data format for mortality tables) stored at the given path and returns a MortalityTable.\n\n\n\n\n\n","category":"function"},{"location":"Tables/#MortalityTables.get_SOA_table","page":"Tables","title":"MortalityTables.get_SOA_table","text":"get_SOA_table(id)\n\nGiven the id of a mort.SOA.org table, grab it and return it as a MortalityTable.\n\n!!! Remember that not all tables have been tested to work.\n\n\n\n\n\n","category":"function"},{"location":"Tables/#MortalityTables.tables","page":"Tables","title":"MortalityTables.tables","text":"tables(dir=nothing)\n\nLoads the XtbML (the SOA XML data format for mortality tables) stored in the given path. If no path is specified, will load the packages in the MortalityTables package directory. To see where your system keeps packages, run DEPOT_PATH from a Julia REPL.\n\n\n\n\n\n","category":"function"},{"location":"Tables/#MortalityTables.get_SOA_table!","page":"Tables","title":"MortalityTables.get_SOA_table!","text":"get_SOA_table!(dict,id)\n\nWill lookup the given mortality table and add it to the given dict, with the name of the table acting as the added key in the dictionary.\n\nThis modifies the given dict (as is indicated by the conventional ! at the end of the function name).\n\n!! Remember that not all tables have been tested to work.\n\n\n\n\n\n","category":"function"},{"location":"Tables/#Table-Constructors","page":"Tables","title":"Table Constructors","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Use these to build your own MortalityTables.jl-compatible table:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"MortalityTables.MortalityTable\nMortalityTables.SelectMortality\nMortalityTables.UltimateMortality\nMortalityTables.mortality_vector","category":"page"},{"location":"Tables/#MortalityTables.MortalityTable","page":"Tables","title":"MortalityTables.MortalityTable","text":"MortalityTable(ultimate)\nMortalityTable(select, ultimate)\nMortalityTable(select, ultimate; metadata::MetaData)\n\nConstructs a container object which can hold either:     - ultimate-only rates (an UltimateTable)     - select and ultimate rates (a SelectUltimateTable)\n\nAlso pass a keyword argument metadata=MetaData(...) to store relevant information (source, notes, etc) about the table itself.\n\nExamples\n\n# first construct the underlying data\nult = UltimateMortality([x / 100 for x in 0:100]); # first ma\nmatrix = rand(10,50); # represents random mortality rates with a select period of 10 years\nsel = SelectMortality(matrix,ult,start_age=0);\n\ntable = MortalityTable(sel,ult)\n\n# can now get rates, indexed by attained age:\n\ntable.select[10] # the vector of rates for a risk issued select at age 10 \n\ntable.ultimate[99] # 0.99\n\n\n\n\n\n\n","category":"type"},{"location":"Tables/#MortalityTables.SelectMortality","page":"Tables","title":"MortalityTables.SelectMortality","text":"SelectMortality(select, ultimate; start_age=0)\n\nGiven a matrix rates, where the first row represents the select rates for a risk, will create a an OffsetArray that is indexed by issue age, containing a vector of rate indexed by attained age. The ultimate mortality vector is used for rates in the post-select period.\n\nGive the optional keyword argument to start the indexing at an age other than zero.\n\nExamples\n\njulia> ult = UltimateMortality([x / 100 for x in 0:100]);\n\njulia> matrix = rand(50,10); # represents random(!) mortality rates with a select period of 10 years\n\njulia> sel = SelectMortality(matrix,ult,start_age=0);\n\njulia> sel[0] # the mortality vector for a select life with issue age 0\n 0.12858960119349439\n 0.1172480189376135\n 0.8237661916705163\n ⋮\n 0.98\n 0.99\n 1.0\n\njulia> sel[0][95] # the mortality rate for a life age 95, that was issued at age 0\n0.95\n\n\n\n\n\n","category":"function"},{"location":"Tables/#MortalityTables.UltimateMortality","page":"Tables","title":"MortalityTables.UltimateMortality","text":"UltimateMortality(vector; start_age=0)\n\nGiven a vector of rates, returns an OffsetArray that is indexed by attained age. \n\nGive the optional keyword argument to start the indexing at an age other than zero.\n\nExamples\n\njulia> m = UltimateMortality([0.1,0.3,0.6,1]);\n\njulia> m[0]\n0.1\n\njulia> m = UltimateMortality([0.1,0.3,0.6,1], start_age = 18);\n\njulia> m[18]\n0.1\n\n\n\n\n\n\n","category":"function"},{"location":"Tables/#MortalityTables.mortality_vector","page":"Tables","title":"MortalityTables.mortality_vector","text":"mortality_vector(vec; start_age=0)\n\nA convienience constructor to create an OffsetArray which has the array indexed by attained age rather than always starting from 1. The package and JuliaActuary ecosystem assume that the rates are indexed by attained age and this allows transformation of tables without a direct dependency on OffsetArrays.jl.\n\nEquivalent to doing:\n\nusing OffsetArrays\nOffsetArray(vec,start_age-1)\n\n\n\n\n\n","category":"function"},{"location":"Tables/#Table-Attributes","page":"Tables","title":"Table Attributes","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Basic metadata about the table (automatically populated for some tables).","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"MortalityTables.TableMetaData","category":"page"},{"location":"Tables/#MortalityTables.TableMetaData","page":"Tables","title":"MortalityTables.TableMetaData","text":"TableMetaData(kwargs...)\n\nHas the following fields, which default to nothing if not specified with a keyword:\n\nname - a name for the table\nid - if a mort.SOA.org sourced table, will be the identifying table ID\nprovider - Where the rates came from\nreference - Source for more info on table\ncontent_type\ndescription\ncomments\nsource_path\n\nWhen you call a MortalityTable interactively, it will nicely print this summary infomration.\n\nExample content from mort.SOA.org:\n\nTable Identity: 1076\nProvider Domain: actuary.org\nProvider Name: American Academy of Actuaries\nTable Reference: Tillinghast, “American Council of Life Insurers: Preferred Version of 2001 CSO Mortality Tables”, ...\nContent Type: CSO/CET\nTable Name: 2001 CSO Super Preferred Select and Ultimate - Male Nonsmoker, ANB\nTable Description: 2001 Commissioners Standard Ordinary (CSO) Super Preferred Select and Ultimate Table – Male Nonsmoker. Basis: Age Nearest Birthday. Minimum Select Age: 0. Maximum Select Age: 99. Minimum Ultimate Age: 16. Maximum Ultimate Age: 120\nComments: Study Data: A preferred version of the 2001 Commissioners Standard Ordinary (CSO) table ...\n\nAnd the source_path would be: https://mort.soa.org/ViewTable.aspx?&TableIdentity=1076\n\nExample usage:\n\njulia-repl> TableMetaData(name=\"My Table Name\")\nTableMetaData(\"My Table Name\", nothing, nothing, nothing, nothing, nothing, nothing, nothing)\n\n\n\n\n\n","category":"type"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Find the final age for which a table defines a rate.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"MortalityTables.omega","category":"page"},{"location":"Tables/#MortalityTables.omega","page":"Tables","title":"MortalityTables.omega","text":"omega(x)\nω(x)\n\nReturns the last index of the given vector. For mortality vectors this means the last attained age for which a rate is defined.\n\nNote that omega can vary depending on the issue age for a select table, and that a select omega may differ from the table's ultimate omega.\n\nω is aliased to omega, but unexported. To use, do using MortalityTables: ω when importing or call MortalityTables.ω()\n\nExamples\n\njulia> qs = UltimateMortality([0.1,0.3,0.6,1]);\njulia> omega(qs)\n3\n\njulia> qs = UltimateMortality([0.1,0.3,0.6,1],start_age=10);\njulia> omega(qs)\n13\n\n\n\n\n\n\n","category":"function"},{"location":"Tables/#Survival-and-Decrement-and-Rates","page":"Tables","title":"Survival and Decrement and Rates","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"To access the rates, simply index by the attained age. Example:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"julia> vbt2001 = tables[\"2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB\"]\nMortalityTable (Insured Lives Mortality):\n   Name:\n       2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB\n   Fields:\n       (:select, :ultimate, :metadata)\n   Provider:\n       Society of Actuaries\n   mort.SOA.org ID:\n       1118\n   mort.SOA.org link:\n       https://mort.soa.org/ViewTable.aspx?&TableIdentity=1118\n   Description:\n       2001 Valuation Basic Table (VBT) Residual Standard Select and Ultimate Table -  Male Nonsmoker.\n       Basis: Age Nearest Birthday. \n       Minimum Select Age: 0. \n       Maximum Select Age: 99. \n       Minimum Ultimate Age: 25. \n       Maximum Ultimate Age: 120","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"The package revolves around easy-to-access vectors which are indexed by attained age:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"julia> vbt2001.select[35]          # vector of rates for issue age 35\n 0.00036\n 0.00048\n ⋮\n 0.94729\n 1.0\n \njulia> vbt2001.select[35][35]      # issue age 35, attained age 35\n 0.00036\n \njulia> vbt2001.select[35][50:end] # issue age 35, attained age 50 through end of table\n0.00316\n0.00345\n ⋮\n0.94729\n1.0\n\njulia> vbt2001.ultimate[95]        # ultimate vectors only need to be called with the attained age\n 0.24298","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"To calculate the survivorship or cumulative decrement:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"MortalityTables.survival\nMortalityTables.decrement","category":"page"},{"location":"Tables/#Fractional-Year-Assumptions","page":"Tables","title":"Fractional Year Assumptions","text":"","category":"section"},{"location":"Tables/","page":"Tables","title":"Tables","text":"When evaluating survival over partial years when you are given full year mortality rates, you must make an assumption over how those deaths are distributed throughout the year. Three assumptions are provided as options and are based on formulas from the 2016 Experience Study Calculations paper from the SOA, specifically pages 40-44.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"The three assumptions are:","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"Uniform() which assumes an increasing force of mortality throughout the year.\nConstant() which assumes a level force of mortality throughout the year.\nBalducci() which assumes a decreasing force of mortality over the year. It seems [to","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"be for making it easier](https://www.soa.org/globalassets/assets/library/research/actuarial-research-clearing-house/1978-89/1988/arch-1/arch88v17.pdf) to calculate successive months by hand rather than any theoretical basis.","category":"page"},{"location":"Tables/","page":"Tables","title":"Tables","text":"MortalityTables.DeathDistribution\nMortalityTables.Balducci\nMortalityTables.Uniform\nMortalityTables.Constant","category":"page"},{"location":"Tables/#MortalityTables.DeathDistribution","page":"Tables","title":"MortalityTables.DeathDistribution","text":"DeathDistribution\n\nAn abstract type used to form an assumption of how deaths occur throughout a     year. See Balducci(), Uniform(), and Constant() for concrete     assumption types.\n\n\n\n\n\n","category":"type"},{"location":"Tables/#MortalityTables.Balducci","page":"Tables","title":"MortalityTables.Balducci","text":"Balducci()\n\nA DeathDistribution type that assumes a decreasing force of mortality over the year.\n\n\n\n\n\n","category":"type"},{"location":"Tables/#MortalityTables.Uniform","page":"Tables","title":"MortalityTables.Uniform","text":"Uniform()\n\nA DeathDistribution type that assumes an increasing force of mortality over the year.\n\n\n\n\n\n","category":"type"},{"location":"Tables/#MortalityTables.Constant","page":"Tables","title":"MortalityTables.Constant","text":"Constant()\n\nA DeathDistribution type that assumes a constant force of mortality over the year.\n\n\n\n\n\n","category":"type"},{"location":"examples/#Usage-Examples","page":"Usage and Examples","title":"Usage Examples","text":"","category":"section"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Pages = [\"examples.md\"]\nDepth = 5","category":"page"},{"location":"examples/#Quickstart","page":"Usage and Examples","title":"Quickstart","text":"","category":"section"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Loading the package and bundled tables:","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"julia> using MortalityTables\n\njulia> tables = MortalityTables.tables()\nDict{String,MortalityTable} with 266 entries:\n  \"2015 VBT Female Non-Smoker RR90 ALB\"                                       => SelectUltimateTable{OffsetArray{OffsetArray{Float64,1,Array{Float64,1}},1,Array{OffsetArray{F…  \n  \"2017 Loaded CSO Preferred Structure Nonsmoker Preferred Female ANB\"        => SelectUltimateTable{OffsetArray{OffsetArray{Float64,1,Array{Float64,1}},1,Array{OffsetArray{F…  \n  ⋮                                                                            => ⋮","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Get information about a particular table:","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"julia> vbt2001 = tables[\"2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB\"]\nMortalityTable (Insured Lives Mortality):\n   Name:\n       2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB\n   Fields:\n       (:select, :ultimate, :metadata)\n   Provider:\n       Society of Actuaries\n   mort.SOA.org ID:\n       1118\n   mort.SOA.org link:\n       https://mort.soa.org/ViewTable.aspx?&TableIdentity=1118\n   Description:\n       2001 Valuation Basic Table (VBT) Residual Standard Select and Ultimate Table -  Male Nonsmoker.\n       Basis: Age Nearest Birthday. \n       Minimum Select Age: 0. \n       Maximum Select Age: 99. \n       Minimum Ultimate Age: 25. \n       Maximum Ultimate Age: 120","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"The package revolves around easy-to-access vectors which are indexed by attained age:","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"julia> vbt2001.select[35]          # vector of rates for issue age 35\n 0.00036\n 0.00048\n ⋮\n 0.94729\n 1.0\n \njulia> vbt2001.select[35][35]      # issue age 35, attained age 35\n 0.00036\n \njulia> vbt2001.select[35][50:end] # issue age 35, attained age 50 through end of table\n0.00316\n0.00345\n ⋮\n0.94729\n1.0\n\njulia> vbt2001.ultimate[95]        # ultimate vectors only need to be called with the attained age\n 0.24298","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Calculate the force of mortality or survival over a range of time:","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"julia> survival(vbt2001.ultimate,30,40) # the survival between ages 30 and 40\n0.9894404665434904\n\njulia> decrement(vbt2001.ultimate,30,40) # the decrement between ages 30 and 40\n0.010559533456509618","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Non-whole periods of time are supported when you specify the assumption (Constant(), Uniform(), or Balducci()) for fractional periods:","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"julia> survival(vbt2001.ultimate,30,40.5,Uniform()) # the survival between ages 30 and 40.5\n0.9887676470262408","category":"page"},{"location":"examples/#Quickly-access-and-compare-tables","page":"Usage and Examples","title":"Quickly access and compare tables","text":"","category":"section"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"This example shows how to develop a visual comparison of rates from scratch, but you may be interested in this pre-built tool for this purpose.","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"using MortalityTables, Plots\n\n\ntables = MortalityTables.tables()\ncso_2001 = tables[\"2001 CSO Super Preferred Select and Ultimate - Male Nonsmoker, ANB\"]\ncso_2017 = tables[\"2017 Loaded CSO Preferred Structure Nonsmoker Super Preferred Male ANB\"]\n\nissue_age = 80\nmort = [\n\tcso_2001.select[issue_age][issue_age:end],\n\tcso_2017.select[issue_age][issue_age:end],\n\t     ]\nplot(\n\t   mort,\n\t   label = [\"2001 CSO\" \"2017 CSO\"],\n\t   title = \"Comparison of 2107 and 2001 CSO \\n for SuperPref NS 80-year-old male\",\n\t   xlabel=\"duration\")","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"(Image: Comparison of 2001 and 2017 CSO \\n for 80-year-old male)","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Easily extend the analysis to move up the ladder of abstraction:","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"\nissue_ages = 18:80\ndurations = 1:40\n\n# compute the relative rates with the element-wise division (\"brodcasting\" in Julia)\nfunction rel_diff(a, b, issue_age,duration)\n        att_age = issue_age + duration - 1\n        return a[issue_age][att_age] / b[issue_age][att_age]\nend\n\n\ndiff = [rel_diff(cso_2017.select,cso_2001.select,ia,dur) for ia in issue_ages, dur in durations]\ncontour(durations,\n        issue_ages,\n        diff,\n        xlabel=\"duration\",ylabel=\"issue ages\",\n        title=\"Relative difference between 2017 and 2001 CSO \\n M PFN\",\n        fill=true\n        )","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"(Image: heatmap comparison of 2017 CSO and 2001 CSO Mortality Table)","category":"page"},{"location":"examples/#Scaling-and-capping-rates","page":"Usage and Examples","title":"Scaling and capping rates","text":"","category":"section"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Say that you want to take a given mortality table, scale it by 130%, and cap it at 1.0. You can do this easliy by broadcasting over the underlying rates (which is really just a vector of numbers at the end of the day):","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"issue_age = 30\nm = cso_2001.select[issue_age]\n\nscaled_m = min.(cso_2001.select[issue_age] .* 1.3, 1.0) # 130% and capped at 1.0 version of `m`","category":"page"},{"location":"examples/","page":"Usage and Examples","title":"Usage and Examples","text":"Note that min.(cso_2001.select .* 1.3, 1.0) won't work because cso_2001.select is still a vector-of-vectors (a vector for each issue age). You need to drill down to a given issue age or use an ulitmate table to manipulate the rates in this way.","category":"page"},{"location":"ComparisonTool/#Table-Comparison-Tool","page":"Comparison Tool","title":"Table Comparison Tool","text":"","category":"section"},{"location":"ComparisonTool/","page":"Comparison Tool","title":"Comparison Tool","text":"You may be interested in this tool to compare mortality tables:","category":"page"},{"location":"ComparisonTool/","page":"Comparison Tool","title":"Comparison Tool","text":"(Image: A gif showing a visualization of the differences between two mortality tables)","category":"page"},{"location":"#MortalityTables.jl","page":"Home","title":"MortalityTables.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"DocTestSetup = quote\n    using MortalityTables\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"Part of the JuliaActuary.org effort to build packages that enable actuaries everywhere to build solutions using open-source tools.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for working with MortalityTables. Has:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Lots of bundled SOA mort.soa.org tables\nsurvival and decrement functions to calculate decrements over period of time\nPartial year mortality calculations (Uniform, Constant, Balducci)\nFriendly syntax and flexible usage\nExtensive set of parametric mortality models.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Installation The package can be installed with the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add MortalityTables Or, equivalently, via the Pkg API:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> import Pkg; Pkg.add(\"MortalityTables\")","category":"page"},{"location":"#Quickstart","page":"Home","title":"Quickstart","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Loading the package and bundled tables:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using MortalityTables\n\njulia> tables = MortalityTables.tables()\nDict{String,MortalityTable} with 266 entries:\n  \"2015 VBT Female Non-Smoker RR90 ALB\"                                       => SelectUltimateTable{OffsetArray{OffsetArray{Float64,1,Array{Float64,1}},1,Array{OffsetArray{F…  \n  \"2017 Loaded CSO Preferred Structure Nonsmoker Preferred Female ANB\"        => SelectUltimateTable{OffsetArray{OffsetArray{Float64,1,Array{Float64,1}},1,Array{OffsetArray{F…  \n  ⋮                                                                            => ⋮","category":"page"},{"location":"","page":"Home","title":"Home","text":"Get information about a particular table:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> vbt2001 = tables[\"2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB\"]\nMortalityTable (Insured Lives Mortality):\n   Name:\n       2001 VBT Residual Standard Select and Ultimate - Male Nonsmoker, ANB\n   Fields:\n       (:select, :ultimate, :metadata)\n   Provider:\n       Society of Actuaries\n   mort.SOA.org ID:\n       1118\n   mort.SOA.org link:\n       https://mort.soa.org/ViewTable.aspx?&TableIdentity=1118\n   Description:\n       2001 Valuation Basic Table (VBT) Residual Standard Select and Ultimate Table -  Male Nonsmoker.\n       Basis: Age Nearest Birthday. \n       Minimum Select Age: 0. \n       Maximum Select Age: 99. \n       Minimum Ultimate Age: 25. \n       Maximum Ultimate Age: 120","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package revolves around easy-to-access vectors which are indexed by attained age:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> vbt2001.select[35]          # vector of rates for issue age 35\n 0.00036\n 0.00048\n ⋮\n 0.94729\n 1.0\n \njulia> vbt2001.select[35][35]      # issue age 35, attained age 35\n 0.00036\n \njulia> vbt2001.select[35][50:end] # issue age 35, attained age 50 through end of table\n0.00316\n0.00345\n ⋮\n0.94729\n1.0\n\njulia> vbt2001.ultimate[95]        # ultimate vectors only need to be called with the attained age\n 0.24298","category":"page"},{"location":"","page":"Home","title":"Home","text":"Calculate the force of mortality or survival over a range of time:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> survival(vbt2001.ultimate,30,40) # the survival between ages 30 and 40\n0.9894404665434904\n\njulia> decrement(vbt2001.ultimate,30,40) # the decrement between ages 30 and 40\n0.010559533456509618","category":"page"},{"location":"","page":"Home","title":"Home","text":"Non-whole periods of time are supported when you specify the assumption (Constant(), Uniform(), or Balducci()) for fractional periods:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> survival(vbt2001.ultimate,30,40.5,Uniform()) # the survival between ages 30 and 40.5\n0.9887676470262408","category":"page"},{"location":"#License-and-Usage-Notes","page":"Home","title":"License and Usage Notes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is MIT Licenced (tl;dr explanation).","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package contains tables downloaded from mort.SOA.org. By using those tables within this package, you also agree to their Terms of Use.","category":"page"},{"location":"#Discussion-and-Questions","page":"Home","title":"Discussion and Questions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have other ideas or questions, feel free to also open an issue, or discuss on the community Zulip or Slack #actuary channel. We welcome all actuarial and related disciplines!","category":"page"}]
}
